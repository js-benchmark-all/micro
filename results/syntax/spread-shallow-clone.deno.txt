clk: ~2.91 GHz
cpu: null
runtime: deno 2.4.3 (x86_64-unknown-linux-gnu)

benchmark                     avg (min … max) p75 / p99    (min … top 1%)
--------------------------------------------- -------------------------------
clone array - spread            56.84 ns/iter  60.37 ns     ▅  █             
                        (38.69 ns … 94.15 ns)  89.39 ns ▂▄▂▆█▇████▄▃▃▂▂▁▂▂▁▁▂
                    gc(  6.28 ms …  25.85 ms) 129.06  b (128.18  b…149.20  b)

clone array - slice             36.14 ns/iter  34.89 ns   █▄                 
                       (25.53 ns … 107.87 ns)  79.61 ns ▆███▄▂▁▂▂▂▂▁▂▂▁▁▁▁▁▂▂
                    gc(  6.65 ms …  13.22 ms) 128.92  b (128.18  b…150.21  b)

summary
  clone array - slice
   1.57x faster than clone array - spread

--------------------------------------------- -------------------------------
clone object - spread           42.81 ns/iter  43.93 ns  █▆▄                 
                       (33.33 ns … 100.05 ns)  94.35 ns ▆███▇▄▂▁▁▂▁▂▂▁▁▁▁▁▁▁▂
                    gc(  5.85 ms …  20.19 ms)  96.39  b ( 96.17  b…104.17  b)

clone object - Object.assign()  57.40 ns/iter  60.64 ns   ▅▆▃▃██▃▆           
                        (44.80 ns … 83.36 ns)  83.06 ns ▃▄████████▃▃▃▄▃▃▁▁▃▁▃
                    gc(  5.60 ms …  13.22 ms)  96.42  b ( 96.11  b…108.17  b)

clone object - Object.create() 674.07 ns/iter 767.71 ns     ▃▅█ ▆            
                        (475.30 ns … 1.07 µs) 927.95 ns ▃▁▃▆███▄█▃▃▃▁▆▃▄▆▄▄▃▃
                    gc(  7.76 ms …  16.47 ms) 750.76  b (545.75  b…995.43  b)

summary
  clone object - spread
   1.34x faster than clone object - Object.assign()
   15.75x faster than clone object - Object.create()
