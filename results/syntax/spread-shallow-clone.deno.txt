clk: ~2.49 GHz
cpu: null
runtime: deno 2.4.3 (x86_64-unknown-linux-gnu)

benchmark                     avg (min … max) p75 / p99    (min … top 1%)
--------------------------------------------- -------------------------------
clone array - spread            57.29 ns/iter  60.63 ns      ▆██ ▆▆          
                        (41.80 ns … 88.93 ns)  78.30 ns ▄▄▄▃████████▄▆▁▄▃▄▃▃▃
                    gc(  6.29 ms …  16.51 ms) 132.51  b (128.18  b…411.76  b)

clone array - slice             44.58 ns/iter  58.92 ns  █                   
                       (24.71 ns … 105.12 ns)  92.53 ns ▄██▇▄▄▂▂▃▃▄▅▄▂▂▂▁▃▂▁▂
                    gc(  6.21 ms …  23.76 ms) 128.76  b (128.18  b…140.19  b)

summary
  clone array - slice
   1.29x faster than clone array - spread

--------------------------------------------- -------------------------------
clone object - spread           39.72 ns/iter  40.97 ns ▃ ▇█▃▄               
                        (33.37 ns … 67.71 ns)  64.79 ns ██████▅▃▂▁▁▁▂▂▂▁▁▁▂▁▂
                    gc(  5.61 ms …  11.59 ms)  96.17  b ( 96.17  b… 96.37  b)

clone object - Object.assign()  60.69 ns/iter  61.36 ns  ▂ █▃▅               
                       (47.36 ns … 102.20 ns)  94.84 ns ▆█▆███▇▁▄▃▃▁▂▃▁▂▁▂▁▂▃
                    gc(  5.32 ms …  11.75 ms)  96.61  b ( 96.11  b…109.18  b)

clone object - Object.create() 707.83 ns/iter 788.23 ns  █      ▃            
                        (524.80 ns … 1.22 µs)   1.15 µs ▄██▆▅▅▂▅█▅▂▄▂▂▂▁▂▁▁▁▂
                    gc(  7.06 ms …  27.70 ms) 764.85  b (545.75  b…  1.05 kb)

summary
  clone object - spread
   1.53x faster than clone object - Object.assign()
   17.82x faster than clone object - Object.create()
