clk: ~1.57 GHz
cpu: null
runtime: deno 2.4.3 (x86_64-unknown-linux-gnu)

benchmark                     avg (min … max) p75 / p99    (min … top 1%)
--------------------------------------------- -------------------------------
clone array - spread            83.23 ns/iter  82.99 ns  █                   
                       (71.76 ns … 133.77 ns) 116.41 ns ▂██▆▆█▅▁▁▂▁▁▁▂▁▁▁▂▂▃▂
                    gc( 11.40 ms …  24.66 ms) 129.57  b (128.18  b…144.50  b)

clone array - slice             78.99 ns/iter  98.11 ns █         ▄          
                       (48.52 ns … 150.73 ns) 147.73 ns █▆▅▁▂▁▁▂▂▆█▃▁▁▁▁▂▂▁▂▂
                    gc( 11.60 ms …  36.41 ms) 128.96  b (128.18  b…140.19  b)

summary
  clone array - slice
   1.05x faster than clone array - spread

--------------------------------------------- -------------------------------
clone object - spread           68.62 ns/iter  69.76 ns  █ ▄                 
                       (57.80 ns … 115.14 ns) 110.17 ns ▂█▅█▆▇▃▂▃▁▁▁▁▂▁▁▁▂▁▁▂
                    gc( 10.62 ms …  21.80 ms)  96.83  b ( 96.17  b…112.17  b)

clone object - Object.assign()  96.05 ns/iter  97.21 ns ▂ █                  
                       (85.54 ns … 153.33 ns) 147.14 ns █▅█▄▅▃▁▃▁▂▁▁▁▂▁▁▂▁▁▁▂
                    gc( 10.33 ms …  22.25 ms)  96.39  b ( 96.17  b…108.17  b)

clone object - Object.create()   1.14 µs/iter   1.22 µs   █                  
                        (934.75 ns … 1.69 µs)   1.56 µs ▃▃█▇▇▆▄▁▁▄▁▃▁▃▄▁▃▁▄▁▃
                    gc( 12.88 ms …  27.25 ms) 770.88  b (736.18  b…  1.05 kb)

summary
  clone object - spread
   1.4x faster than clone object - Object.assign()
   16.65x faster than clone object - Object.create()
