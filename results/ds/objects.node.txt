clk: ~2.69 GHz
cpu: AMD EPYC 7B12
runtime: node 20.18.1 (x64-linux)

benchmark                                         avg (min … max) p75 / p99    (min … top 1%)
----------------------------------------------------------------- -------------------------------
access monomorphic object                          542.31 ns/iter 528.46 ns  █                   
                                            (487.81 ns … 1.09 µs) 992.80 ns ▆█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
                                        gc(  3.03 ms …  11.52 ms)  51.37  b (  5.06  b…396.08  b)

access polymorphic object                          647.12 ns/iter 624.31 ns  █                   
                                            (565.87 ns … 1.16 µs)   1.08 µs ▇█▆▃▂▁▁▁▂▁▁▂▂▁▁▂▁▁▁▁▂
                                        gc(  3.12 ms …  12.07 ms)  52.97  b (  3.29  b…742.05  b)

access array                                       492.35 ns/iter 508.73 ns  █   ▃               
                                          (436.51 ns … 835.30 ns) 710.55 ns ▂█▄▃▄█▄▂▂▂▂▁▁▁▁▁▁▁▁▁▁
                                        gc(  3.01 ms …   8.49 ms)  20.41  b (  0.17  b…285.62  b)

summary
  access array
   1.1x faster than access monomorphic object
   1.31x faster than access polymorphic object

----------------------------------------------------------------- -------------------------------
create & access monomorphic object                  35.24 ns/iter  36.27 ns █                    
                                           (26.86 ns … 158.20 ns)  92.80 ns ██                   
                                          ( 15.57  b … 233.80  b) 120.25  b ██▃▂▂▂▄▄▂▂▁▁▁▁▁▁▁▁▁▁▁

create & access array                               34.50 ns/iter  34.07 ns █                    
                                           (26.93 ns … 200.85 ns)  99.92 ns ██                   
                                          ( 20.06  b … 160.14  b) 112.24  b ██▄▃▃▄▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁

summary
  create & access array
   1.02x faster than create & access monomorphic object

----------------------------------------------------------------- -------------------------------
pick object keys - for in & assign                 160.97 ns/iter 153.71 ns ▅█                   
                                          (138.77 ns … 469.23 ns) 374.08 ns ██                   
                                          ( 46.46  b … 336.17  b) 184.93  b ██▅▂▁▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁

pick object keys - assign with in                  172.45 ns/iter 166.47 ns █▃                   
                                          (146.22 ns … 424.58 ns) 371.99 ns ██                   
                                          ( 36.08  b … 287.35  b) 184.24  b ██▆▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁

pick object keys - assign with Object.hasOwn       167.63 ns/iter 156.21 ns █                    
                                          (140.72 ns … 488.28 ns) 370.63 ns █▆                   
                                          ( 55.72  b … 316.19  b) 184.75  b ██▄▂▂▁▁▂▂▁▁▁▂▂▂▁▁▁▁▁▁

pick object keys - Object.keys() & assign          199.28 ns/iter 192.49 ns  █                   
                                          (171.84 ns … 592.17 ns) 460.07 ns ██                   
                                          (110.00  b … 496.22  b) 288.30  b ██▅▂▂▂▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁

pick object keys - filter() & reduce() with assign 254.37 ns/iter 257.76 ns  █                   
                                          (207.63 ns … 689.80 ns) 514.79 ns ▇█▄                  
                                          (302.24  b … 738.19  b) 577.08  b ███▅▃▄▄▂▂▂▁▁▁▁▂▂▂▂▂▁▁

pick object keys - Object.fromEntries() & filter()   1.03 µs/iter   1.31 µs █                    
                                            (753.85 ns … 1.98 µs)   1.90 µs ██▄                  
                                          (484.95  b …   1.24 kb) 965.91  b ███▅▃▃▂▃▂▃▄▂▅▄▆▄▁▂▁▁▂

summary
  pick object keys - for in & assign
   1.04x faster than pick object keys - assign with Object.hasOwn
   1.07x faster than pick object keys - assign with in
   1.24x faster than pick object keys - Object.keys() & assign
   1.58x faster than pick object keys - filter() & reduce() with assign
   6.38x faster than pick object keys - Object.fromEntries() & filter()
