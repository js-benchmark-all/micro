clk: ~2.06 GHz
cpu: AMD EPYC 7B12
runtime: node 22.10.0 (x64-linux)

benchmark                                         avg (min … max) p75 / p99    (min … top 1%)
----------------------------------------------------------------- -------------------------------
access monomorphic object                           24.90 ns/iter  40.61 ns ▄█▃       ▃          
                                             (2.61 ns … 75.23 ns)  75.03 ns ███▂▁▂▁▂▅▅█▅▆▅▃▂▁▁▂▁▂
                                        gc(  4.13 ms …  16.31 ms)   9.22  b (  0.21  b… 40.19  b)

access polymorphic object                           30.65 ns/iter  41.08 ns ▂▃        █          
                                             (5.07 ns … 91.25 ns)  69.04 ns ██▆▃▂▁▁▇▂▄██▆▆▄▃▂▁▁▂▂
                                        gc(  5.25 ms …  22.37 ms)  11.33  b (  0.21  b… 32.19  b)

access array                                        24.48 ns/iter  35.66 ns █                    
                                            (3.97 ns … 121.54 ns) 116.71 ns █▆▃▂▃██▄▃▂▂▁▁▁▁▁▁▁▁▁▂
                                        gc(  4.31 ms …  23.06 ms)   9.95  b (  0.21  b…121.82  b)

summary
  access array
   1.02x faster than access monomorphic object
   1.25x faster than access polymorphic object

----------------------------------------------------------------- -------------------------------
create & access monomorphic object                  36.14 ns/iter  34.92 ns ▇█                   
                                           (26.34 ns … 388.32 ns) 134.02 ns ██                   
                                          ( 54.65  b … 192.32  b) 104.28  b ██▆▄▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁

create & access array                               38.69 ns/iter  36.54 ns  █                   
                                           (26.93 ns … 269.55 ns) 144.23 ns ▃█                   
                                          ( 67.97  b … 174.18  b) 112.31  b ██▆▄▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁

summary
  create & access monomorphic object
   1.07x faster than create & access array

----------------------------------------------------------------- -------------------------------
pick object keys - Object.keys() & assign          230.35 ns/iter 237.53 ns  █                   
                                          (169.94 ns … 843.00 ns) 569.48 ns ▃█▂                  
                                          (143.74  b … 485.19  b) 289.09  b ███▅▃▄▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁

pick object keys - filter() & reduce() no assign     1.73 µs/iter   1.88 µs  ▇█                  
                                              (1.26 µs … 3.44 µs)   3.06 µs ███▂  ▇              
                                          (723.19  b …   1.24 kb)   1.05 kb ████▅▄█▆▅▁▄▁█▄▆▁▄▂▁▂▂

pick object keys - filter() & reduce() with assign 308.57 ns/iter 327.16 ns  █                   
                                            (222.81 ns … 1.12 µs) 705.76 ns  ██                  
                                          (195.38  b … 873.61  b) 604.75  b ███▆▄▄▅▃▂▂▂▂▂▂▁▂▁▁▁▁▁

pick object keys - Object.fromEntries() & filter()   1.08 µs/iter   1.33 µs  █▂                  
                                            (781.64 ns … 1.84 µs)   1.78 µs ▅██▅                 
                                          (371.02  b …   1.38 kb) 973.78  b ████▆▆▄▂▄▃▃▅▄█▄▆▅▃▃▃▂

summary
  pick object keys - Object.keys() & assign
   1.34x faster than pick object keys - filter() & reduce() with assign
   4.7x faster than pick object keys - Object.fromEntries() & filter()
   7.5x faster than pick object keys - filter() & reduce() no assign
