clk: ~2.36 GHz
cpu: Intel(R) Xeon(R) CPU @ 2.20GHz
runtime: node 20.18.1 (x64-linux)

benchmark                                         avg (min … max) p75 / p99    (min … top 1%)
----------------------------------------------------------------- -------------------------------
access monomorphic object                           33.06 ns/iter  55.58 ns █                    
                                             (8.21 ns … 83.20 ns)  81.56 ns █▃▁▁▁▁▁▁▁▁▁▂▆▇▄▁▂▁▁▁▁
                                        gc(  5.99 ms …  17.72 ms)  10.28  b (  0.16  b… 79.94  b)

access polymorphic object                           52.84 ns/iter  58.69 ns            █▃        
                                             (7.90 ns … 93.81 ns)  89.90 ns ▆▁▁▁▁▁▂▁▂▁███▃▅▁▂▁▂▃▃
                                        gc(  5.91 ms …  20.18 ms)  15.64  b (  0.16  b… 74.48  b)

access array                                        27.88 ns/iter  53.51 ns █                    
                                            (7.53 ns … 108.75 ns) 102.90 ns █▃▁▁▁▁▁▁▁▂▃▃▂▁▁▁▂▁▂▁▁
                                        gc(  6.04 ms …  16.42 ms)   6.77  b (  0.16  b… 66.85  b)

summary
  access array
   1.19x faster than access monomorphic object
   1.9x faster than access polymorphic object

----------------------------------------------------------------- -------------------------------
create & access monomorphic object                  53.09 ns/iter  50.70 ns █                    
                                           (41.80 ns … 418.48 ns) 185.08 ns █▆                   
                                          ( 43.73  b … 210.68  b) 104.36  b ██▄▂▂▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁

create & access array                               52.61 ns/iter  50.97 ns ▇█                   
                                           (42.37 ns … 234.78 ns) 136.34 ns ██▂                  
                                          ( 26.06  b … 189.95  b) 112.32  b ███▄▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▂▁

summary
  create & access array
   1.01x faster than create & access monomorphic object

----------------------------------------------------------------- -------------------------------
pick object keys - for in & assign                 404.10 ns/iter 387.32 ns █▅                   
                                          (341.40 ns … 961.75 ns) 887.26 ns ██                   
                                          (184.10  b … 452.22  b) 187.63  b ██▆▂▄▃▁▁▁▁▂▂▁▁▁▁▁▁▁▂▂

pick object keys - assign with in                  339.55 ns/iter 328.32 ns █▂                   
                                          (298.80 ns … 804.79 ns) 742.72 ns ██                   
                                          ( 91.75  b … 292.57  b) 184.76  b ██▅▂▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁

pick object keys - assign with Object.hasOwn       337.77 ns/iter 326.56 ns █                    
                                          (305.64 ns … 736.33 ns) 716.24 ns ██                   
                                          (  2.94  b … 368.17  b) 184.81  b ██▃▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁

pick object keys - Object.keys() & assign          527.58 ns/iter 532.19 ns █▇                   
                                            (432.22 ns … 1.33 µs)   1.01 µs ██▂                  
                                          (121.03  b … 494.22  b) 288.92  b ███▄▆▂▂▂▁▂▃▃▂▁▁▁▂▂▁▂▂

pick object keys - filter() & reduce() with assign 646.53 ns/iter 609.68 ns █                    
                                            (467.09 ns … 2.32 µs)   2.06 µs █▄                   
                                          ( 31.04  b … 744.33  b) 577.09  b ██▄▂▁▂▃▄▂▂▁▁▁▁▁▁▁▁▁▁▁

pick object keys - Object.fromEntries() & filter()   1.51 µs/iter   1.48 µs █▂▅                  
                                              (1.34 µs … 2.65 µs)   2.63 µs ███                  
                                          (663.41  b …   1.12 kb) 968.13  b ███▇▄▂▁▁▂▁▂▁▁▁▁▂▁▁▁▂▂

summary
  pick object keys - assign with Object.hasOwn
   1.01x faster than pick object keys - assign with in
   1.2x faster than pick object keys - for in & assign
   1.56x faster than pick object keys - Object.keys() & assign
   1.91x faster than pick object keys - filter() & reduce() with assign
   4.47x faster than pick object keys - Object.fromEntries() & filter()
