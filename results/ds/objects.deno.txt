clk: ~2.83 GHz
cpu: null
runtime: deno 2.4.3 (x86_64-unknown-linux-gnu)

benchmark                                         avg (min … max) p75 / p99    (min … top 1%)
----------------------------------------------------------------- -------------------------------
access monomorphic object                           23.63 ns/iter  37.70 ns  █                   
                                             (3.88 ns … 67.59 ns)  60.90 ns ▄█▆▅▂▁▂▁▁▁▄█▆▃▃▂▄▁▁▂▂
                                        gc(  5.76 ms …  18.72 ms)   8.71  b (  0.15  b… 39.52  b)

access polymorphic object                           19.42 ns/iter  36.71 ns  █                   
                                             (4.22 ns … 57.32 ns)  55.61 ns ▄██▆▅▂▁▁▁▁▁▃▂▃▅▅▃▁▁▂▂
                                        gc(  5.81 ms …  29.71 ms)   5.83  b (  0.16  b… 32.19  b)

access array                                        31.78 ns/iter  44.50 ns █▂▂      ▂▄▄         
                                             (6.52 ns … 77.82 ns)  66.15 ns ███▃▁▁▁▁▇███▅▅▇█▅▃▁▃▃
                                        gc(  7.27 ms …  17.18 ms)  12.24  b (  0.16  b… 77.79  b)

summary
  access polymorphic object
   1.22x faster than access monomorphic object
   1.64x faster than access array

----------------------------------------------------------------- -------------------------------
create & access monomorphic object                  31.60 ns/iter  31.05 ns  █                   
                                           (25.86 ns … 169.25 ns)  73.19 ns  █                   
                                          ( 35.14  b … 292.47  b) 104.33  b ▆██▄▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁

create & access array                               34.61 ns/iter  33.86 ns  █                   
                                           (26.24 ns … 199.90 ns) 109.09 ns  █                   
                                          ( 40.66  b … 163.44  b) 112.30  b ██▆▃▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁

summary
  create & access monomorphic object
   1.1x faster than create & access array

----------------------------------------------------------------- -------------------------------
pick object keys - Object.keys() & assign          220.83 ns/iter 217.27 ns  █                   
                                          (176.63 ns … 662.82 ns) 534.03 ns ▅█▇                  
                                          ( 11.45  b … 566.51  b) 289.38  b ███▆▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁

pick object keys - filter() & reduce() no assign     1.45 µs/iter   1.79 µs ▅█                   
                                              (1.07 µs … 2.88 µs)   2.71 µs ██                   
                                          (420.24  b …   1.54 kb)   1.06 kb ██▇▄▄▂▂▂▂▂▂▂▆▂▂▃▄▁▂▁▂

pick object keys - filter() & reduce() with assign 309.12 ns/iter 315.14 ns  █                   
                                            (221.83 ns … 1.23 µs) 805.40 ns ▆█                   
                                          ( 61.19  b … 977.90  b) 618.32  b ███▄▃▂▄▃▃▂▂▂▁▁▁▁▁▁▁▁▁

pick object keys - Object.fromEntries() & filter() 603.66 ns/iter 594.99 ns  █                   
                                            (492.97 ns … 1.19 µs)   1.14 µs ▃█▂                  
                                          (309.82  b …   1.47 kb)   1.01 kb ███▇▄▂▂▁▁▂▂▂▂▂▁▁▁▁▃▁▁

summary
  pick object keys - Object.keys() & assign
   1.4x faster than pick object keys - filter() & reduce() with assign
   2.73x faster than pick object keys - Object.fromEntries() & filter()
   6.57x faster than pick object keys - filter() & reduce() no assign
