clk: ~2.91 GHz
cpu: null
runtime: deno 2.4.3 (x86_64-unknown-linux-gnu)

benchmark                                         avg (min … max) p75 / p99    (min … top 1%)
----------------------------------------------------------------- -------------------------------
access monomorphic object                          394.55 ns/iter 481.66 ns  █                   
                                          (289.98 ns … 628.87 ns) 615.21 ns ▅██▂▃▁▁▂▂▁▂▅█▅▃▃▂▁▁▁▂
                                        gc(  4.68 ms …  15.42 ms)  29.84  b (  0.16  b…158.37  b)

access polymorphic object                          607.70 ns/iter 608.65 ns  █                   
                                            (450.07 ns … 1.70 µs)   1.62 µs ▂██▇▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
                                        gc(  5.51 ms …  23.69 ms)  29.59  b (  0.16  b…392.27  b)

access array                                         2.28 µs/iter   1.56 µs █                    
                                             (1.04 µs … 17.26 µs)  16.97 µs ██▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁
                                        gc(  5.13 ms …  12.95 ms)   1.79 kb (760.00  b… 48.57 kb)

summary
  access monomorphic object
   1.54x faster than access polymorphic object
   5.79x faster than access array

----------------------------------------------------------------- -------------------------------
create & access monomorphic object                  30.80 ns/iter  29.48 ns █▅                   
                                           (25.92 ns … 269.38 ns)  81.06 ns ██                   
                                          ( 15.82  b … 200.14  b) 120.26  b ██▅▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁

create & access array                               30.37 ns/iter  29.54 ns ▅█                   
                                           (25.78 ns … 209.01 ns)  75.24 ns ██                   
                                          ( 45.78  b … 200.16  b) 112.26  b ██▇▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁

summary
  create & access array
   1.01x faster than create & access monomorphic object

----------------------------------------------------------------- -------------------------------
pick object keys - for in & assign                 147.93 ns/iter 140.51 ns █                    
                                          (127.10 ns … 859.07 ns) 395.34 ns █▃                   
                                          (  7.09  b … 528.19  b) 186.46  b ██▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁

pick object keys - assign with in                  335.56 ns/iter 290.00 ns  █                   
                                            (249.00 ns … 1.05 ms) 740.00 ns  █                   
                                          (544.00  b … 111.95 kb) 550.54  b ▅█▆▁▁▁▁▁▁▂▂▂▁▁▁▁▁▁▁▁▁

pick object keys - assign with Object.hasOwn       153.81 ns/iter 146.93 ns ▆█                   
                                          (133.96 ns … 623.16 ns) 342.40 ns ██                   
                                          ( 25.12  b … 440.17  b) 185.44  b ██▆▂▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁

pick object keys - Object.keys() & assign          186.64 ns/iter 180.91 ns ██                   
                                          (158.88 ns … 649.38 ns) 446.54 ns ██                   
                                          (  6.24  b … 573.45  b) 289.27  b ███▃▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁

pick object keys - filter() & reduce() with assign 227.06 ns/iter 217.47 ns █▃                   
                                            (190.43 ns … 1.24 µs) 637.76 ns ██                   
                                          ( 78.21  b … 942.07  b) 632.36  b ██▅▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁

pick object keys - Object.fromEntries() & filter() 543.76 ns/iter 529.27 ns ▇█                   
                                            (452.36 ns … 1.21 µs)   1.05 µs ██                   
                                          (260.24  b …   1.51 kb)   1.04 kb ██▅▄▂▂▁▁▂▂▃▃▂▂▂▁▁▂▂▁▁

summary
  pick object keys - for in & assign
   1.04x faster than pick object keys - assign with Object.hasOwn
   1.26x faster than pick object keys - Object.keys() & assign
   1.53x faster than pick object keys - filter() & reduce() with assign
   2.27x faster than pick object keys - assign with in
   3.68x faster than pick object keys - Object.fromEntries() & filter()
